<br />
<br />
<center><h3 style="color:#41B9E6; ">DATOS GENERALES DEL EQUIPO</h3></center>
<br />

<div class="fields">
    <div class="field">
        <label>Serial</label>
        <input type="text" id="txbSerial" name="txbSerial" autocomplete="off" maxlength="50" value="@Model.Rows[0]["Serial"].ToString()" readonly>
    </div>
    <div class="field">
        <label>Marca</label>
        <input type="text" id="txbMarca" name="txbMarca" autocomplete="off" maxlength="50" value="@Model.Rows[0]["Marca"].ToString()" readonly>
    </div>
    <div class="field">
        <label>Modelo</label>
        <input type="text" id="txbModelo" name="txbModelo" autocomplete="off" maxlength="50" value="@Model.Rows[0]["Modelo"].ToString()" readonly>
    </div>
    <div class="field">
        <label>Tipo equipo</label>
        @Html.DropDownList("cbxTipoEquipo", (SelectList)ViewBag.GetTipoEquipoDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })
    </div>
</div>

<div class="fields">
    <div class="field">
        <label>Ubicación</label>
        @Html.DropDownList("cbxLocation", (SelectList)ViewBag.LocationDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })
    </div>
    <div class="field">
        <label>Sede</label>
        <input type="text" autocomplete="off" maxlength="50" value="@Model.Rows[0]["Sede"].ToString()" readonly>
    </div>
    <div class="field">
        <label>Fecha Fabricación</label>
        <input type="text" id="fabricationDate" placeholder="Fecha Fabricación" autocomplete="off" maxlength="50" value="@Model.Rows[0]["FechaFabricacion"].ToString()" readonly>
    </div>
    <div class="field">
        <label>Capacidad(Unidad)</label>
        <input type="text" autocomplete="off" maxlength="50" value="@Model.Rows[0]["UnidadCapacidad"].ToString()" readonly>
    </div>
</div>
<br />
<br />
<hr />

<center><h3 style="color:#41B9E6; ">FACTORES A INSPECCIONAR DEL EQUIPO</h3></center>
<br />

@using System.Data
@{
    LogicBo.FactoresIzajeBo _factoresIzajeBo = new LogicBo.FactoresIzajeBo();
    string idEquipo = Model.Rows[0]["id"].ToString();
    string idTipoEquipo = Model.Rows[0]["IdTipoEquipo"].ToString();
    System.Data.DataTable dt = _factoresIzajeBo.GetByIdEquipo(Convert.ToInt32(Model.Rows[0]["IdTipoEquipo"].ToString()));
}


@using (Ajax.BeginForm("ProcessCreateInspectionIzaje", "InspectionIzaje", null, new AjaxOptions()
{
    HttpMethod = "POST",
    OnBegin = "onBeginProcessCreateInspectionIzaje()",
    OnSuccess = "onSuccessProcessCreateInspectionIzaje(data)",
    OnFailure = "onFailureProcessCreateInspectionIzaje()",
}, new { @id = "formProcessCreateInspectionIzaje", @enctype = "multipart/form-data" }))
{
    <table class="ui selectable celled table ui center aligned tablesInitial" id="tablesIndexEquipment">
        <thead>
            <tr>
                @foreach (System.Data.DataColumn col in dt.Columns)
                {
                    if (col.ColumnName != "Id")
                    {
                        <th>@col.ColumnName</th>
                    }
                }
                <th>
                    <label>Estado</label>
                </th>
                <th>
                    <label>Comentario</label>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (System.Data.DataRow row in dt.Rows)
            {
                <tr>
                    @foreach (DataColumn col in dt.Columns)
                    {

                        if (col.ColumnName != "Id")
                        {
                            <th>@row[col.ColumnName]</th>
                        }
                    }
                    @foreach (DataColumn col in dt.Columns)
                    {
                        if (col.ColumnName == "Id")
                        {
                            <td>
                                <select id="cbxAssignedDate" name="cbxAssignedDate_@row["Id"].ToString()" class="ui search dropdown">
                                    <option value="">[-Seleccione una opción-]</option>
                                    <option value="Aceptado">Aceptado</option>
                                    <option value="Rechazado">Rechazado</option>
                                </select>
                            </td>
                            <td>
                                <input type="text" id="txbComentario" name="txbComentario_@row["Id"].ToString()" autocomplete="off" maxlength="50">
                            </td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
    <br />
    <br />
    <hr />

    <center><h3 style="color:#41B9E6; ">DISPOSICION GENERAL DE LA INSPECCION</h3></center>
    <br />
    <div class="ui equal width form">

        <div class="fields" hidden>
            <div class="field">
                <input type="hidden" name="id" value="@idEquipo" />
            </div>
        </div>
        <div class="fields">
            <div class="field">
                <label>Precinto</label>
                <input type="text" id="txbPrecinto" name="txbPrecinto" autocomplete="off" maxlength="50">
            </div>
        </div>
        <div class="fields">
            <div class="field">
                <table class="ui selectable celled table ui center aligned">
                    <thead>
                        <tr>
                            <th>Aceptado/Rechazado</th>
                            <th>Accion a Tomar</th>
                            <th>Inspeccionado Por</th>
                            <th>Fecha de inspección</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Html.DropDownList("cbxFinalState", (SelectList)ViewBag.FinalStateDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })</td>
                            <td>@Html.DropDownList("cbxActionResult", (SelectList)ViewBag.ActionResultDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })</td>
                            <td>@Html.DropDownList("cbxInspector", (SelectList)ViewBag.InspectorDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })</td>
                            <td>
                                <div class="ui calendar calendarPicker" id="inspectionDate">
                                    <div class="ui input left icon">
                                        <i class="calendar icon"></i>
                                        <input type="text" placeholder="Fecha Inspección">
                                    </div>
                                </div>
                                <input type="hidden" name="cinspectionDate" id="cinspectionDate" autocomplete="off">
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="fields" hidden>
            <div class="field">
                <input type="hidden" name="idTipoEquipo" value="@idTipoEquipo" />
            </div>
        </div>
        <button class="ui primary button">
            Guardar
        </button>
        <div class="ui floating warning message" style="width:50%;margin-left:25%;margin-right:25%;text-align:center;display:none" id="messageCreateInspectionIzaje">
            <div class="header">
                Atención
            </div>
            <p id="textmessageCreateInspectionIzaje"></p>
        </div>
    </div>
}
<script type="text/javascript">
    $('#inspectionDate').calendar({
        type: 'date',
        text: {
            days: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            today: 'Today',
            now: 'Now',
            am: 'AM',
            pm: 'PM'
        },
        formatter: {
            date: function (date, settings) {
                if (!date) return '';
                var day = date.getDate();
                var month = date.getMonth() + 1;
                var year = date.getFullYear();
                return year + '-' + month + '-' + day;
            }
        },
        onChange: function (date, text, mode) {
            $('#cinspectionDate').val(text);
        }
    });

    $('#formProcessCreateInspectionIzaje').form({
        fields: {
            nombreEquipo: {
                identifier: 'nombreEquipo',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar algun valor en el nombfre del equipo por fvor'
                    },
                ]
            },
            cfabricationDate: {
                identifier: 'cfabricationDate',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir una fecha'
                    },
                ]
            },
            mark: {
                identifier: 'mark',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar un valor'
                    },
                ]
            },
            lot: {
                identifier: 'lot',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar un valor'
                    },
                ]
            },
            cbxElement: {
                identifier: 'cbxElement',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir un valor'
                    },
                ]
            },
            cbxHeadquarter: {
                identifier: 'cbxHeadquarter',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir un valor'
                    },
                ]
            },
            ubication: {
                identifier: 'ubication',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar un valor'
                    },
                ]
            },
            cpurchaseDate: {
                identifier: 'cpurchaseDate',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir una fecha'
                    },
                ]
            },
            cbxAssignedDate: {
                identifier: 'cbxAssignedDate',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir un valor'
                    },
                ]
            },
        }, inline: true,
        on: 'blur'
    });

    function onBeginProcessCreateInspectionIzaje() {
        $('#renderPages').addClass("loading");
    }
    function onFailureProcessCreateInspectionIzaje() {
        $('#renderPages').removeClass("loading");
        $('#messageCreateInspectionIzaje').show('slow').addClass("warning").removeClass("info");
        $('#textmessageCreateInspectionIzaje').text("Ha ocurrido un error al procesar la solicitud");
    }
    function onSuccessProcessCreateInspectionIzaje(data) {
        $('#renderPages').removeClass("loading");
        if (data.result) {
            $('#messageCreateInspectionIzaje').show('slow').removeClass("warning").addClass("info");
            $('#textmessageCreateInspectionIzaje').text("Proceso Completado");
            setTimeout(function () {
                location.reload();
            }, 3000);
        } else {
            $('#messageCreateInspectionIzaje').show('slow').addClass("warning").removeClass("info");
            $('#textmessageCreateInspectionIzaje').text(data.message);
        }
    }
</script>

