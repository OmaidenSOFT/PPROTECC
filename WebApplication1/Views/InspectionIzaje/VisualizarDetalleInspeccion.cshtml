<br />
<br />
<center><h3 style="color:#41B9E6; ">IZAJE DE CARGAS | EQUIPOS DE IZAJE | DATOS DE LA INSPECCIÓN</h3></center>
<br />
<br />
<br />
<center><h3 style="color:#41B9E6; ">DATOS GENERALES DEL EQUIPO</h3></center>
<br />
<div class="ui equal width form">
    <div class="fields">
        <div class="field">
            <label>Serial</label>
            <input type="text" id="txbSerial" name="txbSerial" autocomplete="off" maxlength="50" value="@Model.Rows[0]["Serial"].ToString()" readonly>
        </div>
        <div class="field">
            <label>Marca</label>
            <input type="text" id="txbMarca" name="txbMarca" autocomplete="off" maxlength="50" value="@Model.Rows[0]["Marca"].ToString()" readonly>
        </div>
        <div class="field">
            <label>Modelo</label>
            <input type="text" id="txbModelo" name="txbModelo" autocomplete="off" maxlength="50" value="@Model.Rows[0]["Modelo"].ToString()" readonly>
        </div>
        <div class="field">
            <label>Tipo equipo</label>
            @Html.DropDownList("cbxTipoEquipo", (SelectList)ViewBag.GetTipoEquipoDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })
        </div>
    </div>

    <div class="fields">
        <div class="field">
            <label>Ubicación</label>
            @Html.DropDownList("cbxLocation", (SelectList)ViewBag.LocationDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })
        </div>
        <div class="field">
            <label>Sede</label>
            <input type="text" autocomplete="off" maxlength="50" value="@Model.Rows[0]["Sede"].ToString()" readonly>

        </div>
        <div class="field">
            <label>Fecha Fabricación</label>
            <input type="text" id="fabricationDate" placeholder="Fecha Fabricación" autocomplete="off" maxlength="50" value="@Convert.ToDateTime(Model.Rows[0]["FechaFabricacion"].ToString()).Date.ToString("d")" readonly>
        </div>
        <div class="field">
            <label>Capacidad(Unidad)</label>
            <input type="text" autocomplete="off" maxlength="50" value="@Model.Rows[0]["UnidadCapacidad"].ToString()" readonly>
        </div>
    </div>
    <br />
    <br />
    <hr />
    <br />

    <center><h3 style="color:#41B9E6; ">FACTORES A INSPECCIONAR DEL EQUIPO</h3></center>
    <br />

    @using System.Data
    @{
        LogicBo.FactoresIzajeBo _factoresIzajeBo = new LogicBo.FactoresIzajeBo();
        string idEquipo = Model.Rows[0]["id"].ToString();
        int idTipoEquipo = Convert.ToInt32(Model.Rows[0]["IdTipoEquipo"].ToString());
        int idInspeccion = Convert.ToInt32(Model.Rows[0]["IdInspeccion"].ToString());
        System.Data.DataTable dt = _factoresIzajeBo.GetInspeccionDetalle(idTipoEquipo,idInspeccion);
    }

    <table class="ui selectable celled table ui center aligned tablesInitial" id="tablesIndexEquipment">
        <thead>
            <tr>
                @foreach (System.Data.DataColumn col in dt.Columns)
                {
                    if (col.ColumnName != "Id")
                    {
                        <th>@col.ColumnName</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @foreach (System.Data.DataRow row in dt.Rows)
            {
                <tr>
                    @foreach (DataColumn col in dt.Columns)
                    {
                        if (col.ColumnName != "Id")
                        {
                            <th>@row[col.ColumnName]</th>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
    <br />
    <br />
    <hr />
    <br />

    <center><h3 style="color:#41B9E6; ">DISPOSICION GENERAL DE LA INSPECCION</h3></center>
    <br />

    @{
        LogicBo.InspectionIzajeBo _inspectionIzaje = new LogicBo.InspectionIzajeBo();
        LogicBo.TrainningBo _trainningBO = new LogicBo.TrainningBo();
        LogicBo.ActionResultBo _actionResultBo = new LogicBo.ActionResultBo();
        LogicBo.FinalStateBo _finalStateBo = new LogicBo.FinalStateBo();

        System.Data.DataTable dtInspeccion = _inspectionIzaje.GetById(Convert.ToInt32(idEquipo));

        ViewBag.InspectorDictionary = new SelectList(_trainningBO.GetInspectorDictionary(), "Key", "Value", dtInspeccion.Rows[0]["Id_Inspector"].ToString());
        ViewBag.ActionResultDictionary = new SelectList(_actionResultBo.GetDictionary(), "Key", "Value", dtInspeccion.Rows[0]["Id_Accion"].ToString());
        ViewBag.FinalStateDictionary = new SelectList(_finalStateBo.GetDictionary(), "Key", "Value", dtInspeccion.Rows[0]["Id_Estado"].ToString());
    }


    <div class="fields">
        <div class="field">
            <label>Precinto</label>
            <input type="text" id="txbPrecinto" name="txbPrecinto" autocomplete="off" value="@dtInspeccion.Rows[0]["Precinto"].ToString()" maxlength="50" readonly>
        </div>
    </div>
    <div class="fields">
        <div class="field">
            <table class="ui selectable celled table ui center aligned">
                <thead>
                    <tr>
                        <th>Aceptado/Rechazado</th>
                        <th>Accion a Tomar</th>
                        <th>Inspeccionado Por</th>
                        <th>Fecha de inspección</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Html.DropDownList("cbxFinalState", (SelectList)ViewBag.FinalStateDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })</td>
                        <td>@Html.DropDownList("cbxActionResult", (SelectList)ViewBag.ActionResultDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })</td>
                        <td>@Html.DropDownList("cbxInspector", (SelectList)ViewBag.InspectorDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })</td>
                        <td>
                            @Convert.ToDateTime(dtInspeccion.Rows[0]["FechaInspeccion"].ToString()).Date.ToString("d")
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="fields">
        <div class="field" hidden>
            <input type="hidden" name="id" value="@idEquipo" />
        </div>
    </div>
    <div class="fields" hidden>
        <div class="field">
            <input type="hidden" name="idTipoEquipo" value="@idTipoEquipo" />
        </div>
    </div>
</div>

<script type="text/javascript">
    //LoadTables();
    
    $('#inspectionDate').calendar({
        type: 'date',
        text: {
            days: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            today: 'Today',
            now: 'Now',
            am: 'AM',
            pm: 'PM'
        },
        formatter: {
            date: function (date, settings) {
                if (!date) return '';
                var day = date.getDate();
                var month = date.getMonth() + 1;
                var year = date.getFullYear();
                return year + '-' + month + '-' + day;
            }
        },
        onChange: function (date, text, mode) {
            $('#cinspectionDate').val(text);
        }
    });

    $('#formProcessCreateInspectionIzaje').form({
        fields: {
            nombreEquipo: {
                identifier: 'nombreEquipo',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar algun valor en el nombfre del equipo por fvor'
                    },
                ]
            },
            cfabricationDate: {
                identifier: 'cfabricationDate',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir una fecha'
                    },
                ]
            },
            mark: {
                identifier: 'mark',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar un valor'
                    },
                ]
            },
            lot: {
                identifier: 'lot',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar un valor'
                    },
                ]
            },
            cbxElement: {
                identifier: 'cbxElement',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir un valor'
                    },
                ]
            },
            cbxHeadquarter: {
                identifier: 'cbxHeadquarter',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir un valor'
                    },
                ]
            },
            ubication: {
                identifier: 'ubication',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar un valor'
                    },
                ]
            },
            cpurchaseDate: {
                identifier: 'cpurchaseDate',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir una fecha'
                    },
                ]
            },
            cbxAssignedDate: {
                identifier: 'cbxAssignedDate',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe elegir un valor'
                    },
                ]
            },
        }, inline: true,
        on: 'blur'
    });

    function onBeginProcessCreateInspectionIzaje() {
        $('#renderPages').addClass("loading");
    }
    function onFailureProcessCreateInspectionIzaje() {
        $('#renderPages').removeClass("loading");
        $('#messageCreateInspectionIzaje').show('slow').addClass("warning").removeClass("info");
        $('#textmessageCreateInspectionIzaje').text("Ha ocurrido un error al procesar la solicitud");
    }
    function onSuccessProcessCreateInspectionIzaje(data) {
        $('#renderPages').removeClass("loading");
        if (data.result) {
            $('#messageCreateInspectionIzaje').show('slow').removeClass("warning").addClass("info");
            $('#textmessageCreateInspectionIzaje').text("Proceso Completado");
            setTimeout(function () {
                location.reload();
            }, 3000);
        } else {
            $('#messageCreateInspectionIzaje').show('slow').addClass("warning").removeClass("info");
            $('#textmessageCreateInspectionIzaje').text(data.message);
        }
    }
</script>

