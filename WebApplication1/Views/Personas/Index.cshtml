<center>
    <h3 style="color:#41B9E6; ">
        ADMINISTRACIÓN DE PERSONAS
    </h3>
</center>
<br />
@using System.Data
@model DataTable

@{
    System.Data.DataTable dt = Model;
}
@using (Ajax.BeginForm("SearchPerson", "Personas", null, new AjaxOptions()
{
    HttpMethod = "POST",
    OnBegin = "onBeginProcessSearch()",
    OnSuccess = "onSuccessProcessSearch(data)",
    OnFailure = "onFailureProcessSearch()",
}, new { @id = "formProcessSearch" }))
{
    <div class="ui equal width form">
        <div class="fields">
            <div class="field">
                <label>Identificacion</label>
                <input type="text" id="txbIdentificacion" name="txbIdentificacion" autocomplete="off" maxlength="50">
            </div>
            <div class="field">
                <label>Nombre</label>
                <input type="text" id="txbNombre" name="txbNombre" autocomplete="off" maxlength="50">
            </div>
            <div class="field">
                <label>Sede</label>
                @Html.DropDownList("cbxHeadquarter", (SelectList)ViewBag.HeadquarterDictionary, "[-Seleccione una opción-]", new { @class = "ui search dropdown" })
            </div>
        </div>
        <div class="fields">
            <div class="field">
                <label>F Inicio</label>
                <div class="ui calendar calendarPicker" id="FechaInicio">
                    <div class="ui input left icon">
                        <i class="calendar icon"></i>
                        <input type="text" placeholder="Fecha Compra">
                    </div>
                </div>
                <input type="hidden" name="cFechaInicio" id="cFechaInicio" autocomplete="off">
            </div>
            <div class="field">
                <label>F Fin</label>
                <div class="ui calendar calendarPicker" id="FechaFin">
                    <div class="ui input left icon">
                        <i class="calendar icon"></i>
                        <input type="text" placeholder="Fecha Compra">
                    </div>
                </div>
                <input type="hidden" name="cFechaFin" id="cFechaFin" autocomplete="off">
            </div>
        </div>
        <div class="fields">
            
            <div class="field"></div>
            <div class="field"></div>
            <div class="field"></div>
            <div class="field"></div>
            <div class="field"></div>
            <div class="field"></div>
            <div class="field">
                <button class="ui primary button">
                    Buscar
                </button>
                <button class="ui primary button" href="javascript:void(0)" onclick="location.href='@Url.Action("DownloadFile", "Download", new { fileName = "Personas", @id="0"})'">
                    Exportar
                </button>
            </div>
        </div>
        <div id="renderSearchPerson">
            <table class="ui selectable celled table ui center aligned tablesInitial" id="tablesIndexEquipment">
                <thead>
                    <tr>
                        @foreach (System.Data.DataColumn col in Model.Columns)
                        {
                            if (col.ColumnName == "#" || col.ColumnName == "Identificacion" || col.ColumnName == "Nombre" || col.ColumnName == "Sede" || col.ColumnName == "Asignado" || col.ColumnName == "Fecha Curso Inicial" || col.ColumnName == "Fecha Ultimo Curso" || col.ColumnName == "Estado Vigencia Ult. Curso")
                            {
                                <th>@col.ColumnName</th>
                            }
                        }
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (System.Data.DataRow row in Model.Rows)
                    {
                        <tr>
                            @foreach (DataColumn col in Model.Columns)
                            {
                                if (col.ColumnName == "#" || col.ColumnName == "Identificacion" || col.ColumnName == "Nombre" || col.ColumnName == "Sede" || col.ColumnName == "Asignado"  || col.ColumnName == "Estado Vigencia Ult. Curso")
                                {
                                    <th>@row[col.ColumnName]</th>
                                }
                                else if (col.ColumnName == "Fecha Curso Inicial" || col.ColumnName == "Fecha Ultimo Curso")
                                {
                                    <th>@DateTime.Parse(row[col.ColumnName].ToString()).ToString("d")</th>
                                }
                                else if (col.ColumnName == "Estado Vigencia Ult. Curso")
                                {
                                    switch (row[col.ColumnName].ToString())
                                    {
                                        case "Vigente":
                                            <th style="background-color:green; color:white;">@row[col.ColumnName]</th>
                                            break;
                                        case "Vencido":
                                            <th style="background-color:red; color:white;">@row[col.ColumnName]</th>
                                            break;
                                        default:
                                            <th>@row[col.ColumnName]</th>
                                            break;
                                    }
                                }
                            }
                            <td>
                                <a href="javascript:void(0)" onclick="cargarElement('@Url.Action("EditPerson",new { @id=row["#"].ToString()})')">Editar</a>
                            </td>
                            <td>
                                <a href="javascript:void(0)" onclick="cargarElement('@Url.Action("DetalleCurso",new { @id=row["#"].ToString()})')">Curso</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
<script type="text/javascript">
    $('#FechaInicio').calendar({
        type: 'date',
        text: {
            days: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            today: 'Today',
            now: 'Now',
            am: 'AM',
            pm: 'PM'
        },
        formatter: {
            date: function (date, settings) {
                if (!date) return '';
                var day = date.getDate();
                var month = date.getMonth() + 1;
                var year = date.getFullYear();
                return year + '-' + month + '-' + day;
            }
        },
        onChange: function (date, text, mode) {
            $('#cFechaInicio').val(text);
        }
    });

    $('#FechaFin').calendar({
        type: 'date',
        text: {
            days: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
            today: 'Today',
            now: 'Now',
            am: 'AM',
            pm: 'PM'
        },
        formatter: {
            date: function (date, settings) {
                if (!date) return '';
                var day = date.getDate();
                var month = date.getMonth() + 1;
                var year = date.getFullYear();
                return year + '-' + month + '-' + day;
            }
        },
        onChange: function (date, text, mode) {
            $('#cFechaFin').val(text);
        }
    });

    $('#formProcessSearch').form({
        fields: {
            headQuarterType: {
                identifier: 'headQuarterType',
                rules: [{
                    type: 'checked',
                    prompt: 'Debe seleccionar una opción'
                }]
            },
            frequency: {
                identifier: 'frequency',
                rules: [{
                    type: 'checked',
                    prompt: 'Debe seleccionar una opción'
                }]
            },

        }, inline: true,
        on: 'blur'
    });
    function onBeginProcessSearch() {
        $('#renderPages').addClass("loading");
        $('#renderSearchPerson').empty();
    }
    function onFailureProcessSearch() {
        $('#renderPages').removeClass("loading");
        $('#messageCreate').show('slow').addClass("warning").removeClass("info");
        $('#textmessageCreate').text("Ha ocurrido un error al procesar la solicitud");
    }
    function onSuccessProcessSearch(data) {
        $('#renderPages').removeClass("loading");
        $('#renderSearchPerson').html(data);
    }
</script>
