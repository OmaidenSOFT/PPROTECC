@using System.Data
@model DataTable
<style>
    #modalLoadCourses {
        height: 80vh;
        overflow-y: scroll;
    }
</style>
<h3 class="titlesPages">
    CREAR INSPECTOR
</h3>
@using (Ajax.BeginForm("ProcessCreateInspector", "Trainning", null, new AjaxOptions()
{
    HttpMethod = "POST",
    OnBegin = "return onBeginProcessCreateInspector()",
    OnSuccess = "onSuccessProcessCreateInspector(data)",
    OnFailure = "onFailureProcessCreateInspector()",
}, new { @id = "formProcessCreateInspector" }))
{

<div class="ui equal width form">
    <div class="fields">
        <div class="field">
            <label>Login</label>
            <input type="text" id="login" name="login" placeholder="Usuario" autocomplete="off" maxlength="50">
        </div>
        <div class="field">

            <label>Nombre</label>
            <input type="text" id="name" name="name" placeholder="Nombre" autocomplete="off" maxlength="50">
        </div>
        <div class="field">
            <label>Apellido</label>
            <input type="text" id="lastname" name="lastname" placeholder="Apellido" autocomplete="off" maxlength="50">
        </div>
        <div class="field">
            <label>Identificación</label>
            <input type="text" id="identification" name="identification" placeholder="Identificación" autocomplete="off" maxlength="50">
        </div>
        <div class="field">
            <label>Contraseña</label>
            <input type="password" id="pass" name="pass" placeholder="Contraseña" autocomplete="off" maxlength="50">
        </div>
    </div>
    <div class="required inline fields">
        <div class="field">
            <div class="ui radio checkbox">
                <input type="radio" name="enabledInspector" value="1" checked>
                <label>Activo</label>
            </div>
        </div>
        <div class="field">
            <div class="ui radio checkbox">
                <input type="radio" name="enabledInspector" value="2">
                <label>Inactivo</label>
            </div>
        </div>
    </div>


</div>
}
<div class="ui equal width form">
    <div class="fields">
        <div class="field">
            <label>Archivo Certificación</label>
            <form action="@Url.Action("UploadFileInspector")" method="POST" class="dropzone" id="filePerson">
                <input type="hidden" name="type" value="CourseInitial" />
            </form>
            <div class="ui floating message info" style="width: 50%; margin-left: 25%; margin-right: 25%; text-align: center;display:none" id="messageFilePerson">
                <div class="header">
                    Atención
                </div>
                <p>El archivo ya ha sido registrado en nuestro sistema, al guardar se finalizará el proceso</p>
            </div>
        </div>
         <div class="field">
            <label>Foto</label>
            <form action="@Url.Action("UploadFileInspector")" method="POST" class="dropzone" id="photoPerson">
                <input type="hidden" name="type" value="Photo" />
            </form>
            <div class="ui floating message info" style="width: 50%; margin-left: 25%; margin-right: 25%; text-align: center;display:none" id="messagePhotoPerson">
                <div class="header">
                    Atención
                </div>
                <p>La imagen ya ha sido registrada en nuestro sistema, al guardar se finalizará el proceso</p>
            </div>
        </div>
    </div>
</div>

<button class="ui primary button" id="btnGuardar">
    Guardar
</button>
<div class="ui floating warning message" style="width:50%;margin-left:25%;margin-right:25%;text-align:center;display:none" id="messageCreateInspector">
    <div class="header">
        Atención
    </div>
    <p id="textmessageCreateInspector"></p>
</div>
<script type="text/javascript">
    $('#messageCreateInspector').hide();

    $('#formProcessCreateInspector').form({
        fields: {
            name: {
                identifier: 'name',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar algun valor'
                    },
                ]
            },
            lastname: {
                identifier: 'lastname',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar algun valor'
                    },
                ]
            },
            identification: {
                identifier: 'identification',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar algun valor'
                    },
                ]
            },


            login: {
                identifier: 'login',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar algun valor'
                    },
                ]
            },
            pass: {
                identifier: 'pass',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Debe ingresar algun valor'
                    },
                ]
            },
        }, inline: true,
        on: 'blur'
    });
    var myDropzoneFile;
    var idVariedad;
    var _thisFile;
    var countFile = 0;
    $("#photoPerson").dropzone({
        autoProcessQueue: false,
        addRemoveLinks: true,
        maxFiles: 1,
        acceptedFiles: "image/png",
        init: function () {
            myDropzonePhoto = this; // closure
            this.on("addedfile", function (file) {
                var re = /(?:\.([^.]+))?$/;
                var ext = re.exec(file.name)[1];
                ext = ext.toUpperCase();
                _thisPhoto = this;
                if (ext == "PNG") {
                } else {
                    _thisPhoto.removeFile(file);
                }
            });
            this.on("removedfile", function (file) {
            });
            this.on("success", function (file, data, response) {
                if (data.result) {
                    countPhoto = countPhoto + 1;
                    _thisPhoto.removeFile(file);
                    if (myDropzonePhoto.files.length == 0) {
                        $('#messagePhotoPerson').show();
                        $('#photoPerson').hide();
                        $('#formProcessCreateInspector').submit();
                    }
                } else {
                    alert("A ocurrido un eror");
                    console.warn(data.message);
                }
            });
            this.on("uploadprogress", function (file) {
                $('.btnEliminar').attr('disabled', true);
            });
            this.on("error", function (xhr) {
                $('.btnEliminar').attr('disabled', false);
                console.warn(xhr);
            });
            this.on("maxfilesexceeded", function (file) {
                this.removeFile(file);
            });
        }
    });
    $("#filePerson").dropzone({
        autoProcessQueue: false,
        addRemoveLinks: true,
        maxFiles: 1,
        acceptedFiles: ".pdf",
        init: function () {
            myDropzoneFile = this; // closure
            this.on("addedfile", function (file) {
                var re = /(?:\.([^.]+))?$/;
                var ext = re.exec(file.name)[1];
                ext = ext.toUpperCase();
                _thisFile = this;
                if (ext == "PDF") {
                } else {
                    _thisFile.removeFile(file);
                }
            });
            this.on("removedfile", function (file) {
            });
            this.on("success", function (file, data, response) {
                if (data.result) {
                    countFile = countFile + 1;
                    _thisFile.removeFile(file);
                    if (myDropzoneFile.files.length == 0) {
                        $('#messageFileInspector').show();
                        $('#filePerson').hide();
                        $('#formProcessCreateInspector').submit();
                    }
                } else {
                    alert("A ocurrido un eror");
                    console.warn(data.message);
                }
            });
            this.on("uploadprogress", function (file) {
                $('.btnEliminar').attr('disabled', true);
            });
            this.on("error", function (xhr) {
                $('.btnEliminar').attr('disabled', false);
                console.warn(xhr);
            });
            this.on("maxfilesexceeded", function (file) {
                this.removeFile(file);
            });
        }
    });

    $('#btnGuardar').on('click', function () {
        $('#formProcessCreateInspector').submit();
    });


    function onBeginProcessCreateInspector() {
        if (myDropzoneFile.files.length == 0) {
            if (myDropzonePhoto.files.length == 0) {
                return true;
            } else {
                myDropzonePhoto.processQueue();
                return false;
            }
        } else {
            $('#renderPages').addClass("loading");
            myDropzoneFile.processQueue();
            return false;
        }
        return true;
    }

    function onFailureProcessCreatePerson() {
        $('#renderPages').removeClass("loading");
        $('#messageCreateInspector').show('slow').addClass("warning").removeClass("info");
        $('#textmessageCreateInspector').text("Ha ocurrido un error al procesar la solicitud");
    }
    function onSuccessProcessCreateInspector(data) {
        $('#renderPages').removeClass("loading");
        if (data.result) {
            $('#messageCreateInspector').show('slow').removeClass("warning").addClass("info");
            $('#textmessageCreateInspector').text("Proceso Completado");
           

        } else {
            $('#messageCreateInspector').show('slow').addClass("warning").removeClass("info");
            $('#textmessageCreateInspector').text(data.message);
        }
    }


</script>
